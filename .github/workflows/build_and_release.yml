name: "Build and Release"

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  release:
    types:
      - released
  schedule:
    - cron: "0 0 * * *"

jobs:
  build_wget2:
    runs-on: ubuntu-24.04
    container: "rzhy/ubuntu:wget2"
    #container: ubuntu:rolling
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      #- name: Install prerequisites
      #  run: |
      #    apt-get update
      #    DEBIAN_FRONTEND=noninteractive apt-get upgrade -y
      #    apt-get install -y --no-install-recommends  \
      #      autopoint \
      #      cmake \
      #      gettext \
      #      gperf \
      #      lzip \
      #      mingw-w64 \
      #      ninja-build \
      #      pkg-config-mingw-w64-x86-64 \
      #      git curl ca-certificates gnupg wget build-essential autoconf automake libtool python3 meson python3-pip flex texinfo jq \
      #      retry
      - name: Compile
        env:
          CROSS_HOST: "x86_64-w64-mingw32"
        run: |
          chmod +x "${GITHUB_WORKSPACE}/build.sh"
          "${GITHUB_WORKSPACE}/build.sh"
      - name: Archive wget2.exe
        uses: actions/upload-artifact@v4
        with:
          name: wget2.exe
          path: "wget2.exe"
      - name: Get version number
        run: |
          VERSION=$(wget -qO- https://raw.githubusercontent.com/rockdaboot/wget2/master/NEWS | grep -oP '\bRelease v\K[\d.]+' | head -n 1)
          echo "wget2_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: wget2-v${{ env.wget2_VERSION }}
          allowUpdates: true
          artifacts: "wget2.exe"
          bodyFile: "README.md"
          token: ${{ secrets.GITHUB_TOKEN }}
