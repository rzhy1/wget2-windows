name: "Build and Release"

on:
  workflow_dispatch:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  release:
    types:
      - released
  schedule:
    - cron: "0 0 * * *"

jobs:
  build_wget2:
    runs-on: ubuntu-24.04
    #container: "rzhy/ubuntu:wget2"
    #container: ubuntu:devel
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configure APT source for Ubuntu 24.04
        run: |
          sudo apt-get update
          sudo apt-get install -y netselect-apt
          # 从 Ubuntu 官方镜像列表文件中测试最快的 20 个镜像，超时设置为 40 秒
          sudo netselect -s 20 -t 40 $(wget -qO - mirrors.ubuntu.com/mirrors.txt)
          echo "测试完成"
          # 直接配置阿里云镜像源（不备份原文件）
          sudo tee /etc/apt/sources.list.d/ubuntu.sources > /dev/null << 'EOF'
          Types: deb
          URIs: http://mirrors.aliyun.com/ubuntu
          Suites: noble noble-updates noble-backports noble-security
          Components: main restricted universe multiverse
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
          EOF
        
          # 更新软件源列表
          sudo apt-get update -o Acquire-by-hash=yes -qy
          
      - name: Install prerequisites
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends  \
            autopoint \
            cmake \
            gettext \
            gperf \
            lzip \
            mingw-w64 \
            ninja-build \
            pkg-config-mingw-w64-x86-64 \
            git curl ca-certificates gnupg wget build-essential autoconf automake libtool python3 meson python3-pip python3-venv flex texinfo jq \
            retry bc lld
      - name: Compile
        env:
          CROSS_HOST: "x86_64-w64-mingw32"
        run: |
          chmod +x "${GITHUB_WORKSPACE}/build.sh"
          "${GITHUB_WORKSPACE}/build.sh"
      - name: Archive wget2.exe
        uses: actions/upload-artifact@v4
        with:
          name: wget2.exe
          path: "wget2.exe"
      - name: Get version number
        run: |
          VERSION=$(wget -qO- https://raw.githubusercontent.com/rockdaboot/wget2/master/NEWS | grep -oP '\bRelease v\K[\d.]+' | head -n 1)
          echo "wget2_VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: wget2-v${{ env.wget2_VERSION }}
          allowUpdates: true
          artifacts: "wget2.exe"
          bodyFile: "README.md"
          token: ${{ secrets.GITHUB_TOKEN }}
